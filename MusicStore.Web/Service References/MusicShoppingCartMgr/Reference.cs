//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicStore.Web.MusicShoppingCartMgr {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.OrderDetail> OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.OrderDetail> OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MusicStore.Web.MusicShoppingCartMgr.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MusicStore.Web.MusicShoppingCartMgr.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderDetailId {
            get {
                return this.OrderDetailIdField;
            }
            set {
                if ((this.OrderDetailIdField.Equals(value) != true)) {
                    this.OrderDetailIdField = value;
                    this.RaisePropertyChanged("OrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core")]
    [System.SerializableAttribute()]
    public partial class Album : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumArtUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MusicStore.Web.MusicShoppingCartMgr.Artist ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MusicStore.Web.MusicShoppingCartMgr.Genre GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumArtUrl {
            get {
                return this.AlbumArtUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumArtUrlField, value) != true)) {
                    this.AlbumArtUrlField = value;
                    this.RaisePropertyChanged("AlbumArtUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MusicStore.Web.MusicShoppingCartMgr.Artist Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MusicStore.Web.MusicShoppingCartMgr.Genre Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Artist", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core")]
    [System.SerializableAttribute()]
    public partial class Artist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArtistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArtistId {
            get {
                return this.ArtistIdField;
            }
            set {
                if ((this.ArtistIdField.Equals(value) != true)) {
                    this.ArtistIdField = value;
                    this.RaisePropertyChanged("ArtistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Genre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Album> AlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Album> Albums {
            get {
                return this.AlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumsField, value) != true)) {
                    this.AlbumsField = value;
                    this.RaisePropertyChanged("Albums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GenreId {
            get {
                return this.GenreIdField;
            }
            set {
                if ((this.GenreIdField.Equals(value) != true)) {
                    this.GenreIdField = value;
                    this.RaisePropertyChanged("GenreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/MusicStore.Core")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MusicStore.Web.MusicShoppingCartMgr.Album AlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CartIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MusicStore.Web.MusicShoppingCartMgr.Album Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CartId {
            get {
                return this.CartIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CartIdField, value) != true)) {
                    this.CartIdField = value;
                    this.RaisePropertyChanged("CartId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MusicShoppingCartMgr.iShoppingCart")]
    public interface iShoppingCart {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/CreateOrder", ReplyAction="http://tempuri.org/iShoppingCart/CreateOrderResponse")]
        int CreateOrder(MusicStore.Web.MusicShoppingCartMgr.Order order, string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/CreateOrder", ReplyAction="http://tempuri.org/iShoppingCart/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(MusicStore.Web.MusicShoppingCartMgr.Order order, string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/AddToCart", ReplyAction="http://tempuri.org/iShoppingCart/AddToCartResponse")]
        void AddToCart(MusicStore.Web.MusicShoppingCartMgr.Album album, string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/AddToCart", ReplyAction="http://tempuri.org/iShoppingCart/AddToCartResponse")]
        System.Threading.Tasks.Task AddToCartAsync(MusicStore.Web.MusicShoppingCartMgr.Album album, string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetCartItems", ReplyAction="http://tempuri.org/iShoppingCart/GetCartItemsResponse")]
        System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Cart> GetCartItems(string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetCartItems", ReplyAction="http://tempuri.org/iShoppingCart/GetCartItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Cart>> GetCartItemsAsync(string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetTotal", ReplyAction="http://tempuri.org/iShoppingCart/GetTotalResponse")]
        decimal GetTotal(string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetTotal", ReplyAction="http://tempuri.org/iShoppingCart/GetTotalResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalAsync(string ShoppingCartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetAlbum", ReplyAction="http://tempuri.org/iShoppingCart/GetAlbumResponse")]
        MusicStore.Web.MusicShoppingCartMgr.Album GetAlbum(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetAlbum", ReplyAction="http://tempuri.org/iShoppingCart/GetAlbumResponse")]
        System.Threading.Tasks.Task<MusicStore.Web.MusicShoppingCartMgr.Album> GetAlbumAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/RemoveFromCart", ReplyAction="http://tempuri.org/iShoppingCart/RemoveFromCartResponse")]
        int RemoveFromCart(string ShoppingCartID, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/RemoveFromCart", ReplyAction="http://tempuri.org/iShoppingCart/RemoveFromCartResponse")]
        System.Threading.Tasks.Task<int> RemoveFromCartAsync(string ShoppingCartID, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetCount", ReplyAction="http://tempuri.org/iShoppingCart/GetCountResponse")]
        int GetCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/GetCount", ReplyAction="http://tempuri.org/iShoppingCart/GetCountResponse")]
        System.Threading.Tasks.Task<int> GetCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/MigrateCart", ReplyAction="http://tempuri.org/iShoppingCart/MigrateCartResponse")]
        void MigrateCart(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/MigrateCart", ReplyAction="http://tempuri.org/iShoppingCart/MigrateCartResponse")]
        System.Threading.Tasks.Task MigrateCartAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/AddOrder", ReplyAction="http://tempuri.org/iShoppingCart/AddOrderResponse")]
        void AddOrder(MusicStore.Web.MusicShoppingCartMgr.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/AddOrder", ReplyAction="http://tempuri.org/iShoppingCart/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(MusicStore.Web.MusicShoppingCartMgr.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/IsValid", ReplyAction="http://tempuri.org/iShoppingCart/IsValidResponse")]
        bool IsValid(int id, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/iShoppingCart/IsValid", ReplyAction="http://tempuri.org/iShoppingCart/IsValidResponse")]
        System.Threading.Tasks.Task<bool> IsValidAsync(int id, string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iShoppingCartChannel : MusicStore.Web.MusicShoppingCartMgr.iShoppingCart, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iShoppingCartClient : System.ServiceModel.ClientBase<MusicStore.Web.MusicShoppingCartMgr.iShoppingCart>, MusicStore.Web.MusicShoppingCartMgr.iShoppingCart {
        
        public iShoppingCartClient() {
        }
        
        public iShoppingCartClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iShoppingCartClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iShoppingCartClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iShoppingCartClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrder(MusicStore.Web.MusicShoppingCartMgr.Order order, string ShoppingCartID) {
            return base.Channel.CreateOrder(order, ShoppingCartID);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(MusicStore.Web.MusicShoppingCartMgr.Order order, string ShoppingCartID) {
            return base.Channel.CreateOrderAsync(order, ShoppingCartID);
        }
        
        public void AddToCart(MusicStore.Web.MusicShoppingCartMgr.Album album, string ShoppingCartID) {
            base.Channel.AddToCart(album, ShoppingCartID);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(MusicStore.Web.MusicShoppingCartMgr.Album album, string ShoppingCartID) {
            return base.Channel.AddToCartAsync(album, ShoppingCartID);
        }
        
        public System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Cart> GetCartItems(string ShoppingCartID) {
            return base.Channel.GetCartItems(ShoppingCartID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MusicStore.Web.MusicShoppingCartMgr.Cart>> GetCartItemsAsync(string ShoppingCartID) {
            return base.Channel.GetCartItemsAsync(ShoppingCartID);
        }
        
        public decimal GetTotal(string ShoppingCartID) {
            return base.Channel.GetTotal(ShoppingCartID);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalAsync(string ShoppingCartID) {
            return base.Channel.GetTotalAsync(ShoppingCartID);
        }
        
        public MusicStore.Web.MusicShoppingCartMgr.Album GetAlbum(int id) {
            return base.Channel.GetAlbum(id);
        }
        
        public System.Threading.Tasks.Task<MusicStore.Web.MusicShoppingCartMgr.Album> GetAlbumAsync(int id) {
            return base.Channel.GetAlbumAsync(id);
        }
        
        public int RemoveFromCart(string ShoppingCartID, int id) {
            return base.Channel.RemoveFromCart(ShoppingCartID, id);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromCartAsync(string ShoppingCartID, int id) {
            return base.Channel.RemoveFromCartAsync(ShoppingCartID, id);
        }
        
        public int GetCount() {
            return base.Channel.GetCount();
        }
        
        public System.Threading.Tasks.Task<int> GetCountAsync() {
            return base.Channel.GetCountAsync();
        }
        
        public void MigrateCart(string userName) {
            base.Channel.MigrateCart(userName);
        }
        
        public System.Threading.Tasks.Task MigrateCartAsync(string userName) {
            return base.Channel.MigrateCartAsync(userName);
        }
        
        public void AddOrder(MusicStore.Web.MusicShoppingCartMgr.Order order) {
            base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(MusicStore.Web.MusicShoppingCartMgr.Order order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public bool IsValid(int id, string userName) {
            return base.Channel.IsValid(id, userName);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidAsync(int id, string userName) {
            return base.Channel.IsValidAsync(id, userName);
        }
    }
}
